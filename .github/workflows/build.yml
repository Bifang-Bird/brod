name: brod
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: OTP
        uses: erlef/setup-beam@v1
        with:
          version-type: strict
          otp-version: '24.1'
          rebar3-version: '3.17.0'
      - name: Cache Hex packages
        id: cache-lint-hex
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: lint-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: lint-hex
      - name: Lint
        run: rebar3 lint
  build:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Kafka ${{matrix.kafka}}
    strategy:
      fail-fast: false
      matrix:
        otp: ['24.1', '23.3.4.7', '22.3.4.21']
        kafka: ['2.4', '1.1', '0.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Hex packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: ${{ runner.os }}-hex-
      - name: Cache Dialyzer PLTs
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/rebar3_*_plt
          key: ${{ runner.os }}-dialyzer-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.config')) }}
          restore-keys: ${{ runner.os }}-dialyzer-
      - name: Install Erlang
        uses: erlef/setup-beam@v1
        with:
          version-type: strict
          otp-version: ${{matrix.otp}}
          rebar3-version: '3.17.0'
      - name: Rebar version
        run: rebar3 --version
      - name: Compile
        run: rebar3 do compile
      - name: Make brod_cli script
        run: rebar3 as brod_cli escriptize
      - name: Run tests
        run: |
          export KAFKA_VERSION=${{ matrix.kafka }}
          echo "Running Kafka ${KAFKA_VERSION}"
          scripts/setup-test-env.sh && rebar3 do ct,eunit
      - name: Store test logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: ct-logs
          path: _build/test/logs
      - name: Create Cover Reports
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: rebar3 do cover,coveralls send
      - name: Checks
        run: rebar3 do dialyzer,xref
  docs:
    needs: build
    runs-on: ubuntu-latest
    name: Publish Documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: OTP
        uses: erlef/setup-beam@v1
        with:
          version-type: strict
          otp-version: '24.1'
          rebar3-version: '3.17.0'
      - name: Build Documentation
        run: rebar3 do hex build
      - name: Publish documentation
        uses: actions/upload-artifact@v1
        with:
          name: edoc
          path: doc
